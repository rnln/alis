format = """
$username\
$hostname\
$shlvl\
$singularity\
$kubernetes\
$directory\
$git_branch\
$git_commit\
$git_state\
$git_status\
$hg_branch\
$docker_context\
$package\
$cmake\
$dart\
$dotnet\
$elixir\
$elm\
$erlang\
$golang\
$helm\
$java\
$julia\
$kotlin\
$lua\
$nim\
$nodejs\
$ocaml\
$perl\
$php\
$purescript\
$python\
$ruby\
$rust\
$swift\
$terraform\
$vagrant\
$zig\
$nix_shell\
$conda\
$memory_usage\
$aws\
$gcloud\
$openstack\
$env_var\
$crystal\
$custom\
$cmd_duration\
$line_break\
$jobs\
$battery\
$time\
$status\
$shell\
$character"""
add_newline = false
scan_timeout = 1000
command_timeout = 500

[username]
disabled = false
format = "[$user]($style) in "
style_root = "red"
style_user = "green"
show_always = false

[hostname]
disabled = false
format = "\b\b\bat [$hostname]($style) in "
style = "green"
ssh_only = true
trim_at = "."

[shlvl]
disabled = true
format = "[$symbol$shlvl]($style) "
symbol = "↕️ "
style = "yellow"
threshold = 2
repeat = false

[singularity]
disabled = false
format = "[$symbol\\[$env\\]]($style) "
symbol = ""
style = "blue dimmed"

[kubernetes]
disabled = true
format = "[$symbol$context( \\($namespace\\))]($style) in "
symbol = "☸ "
style = "cyan"
    # [kubernetes.context_aliases]
    # "dev.local.cluster.k8s" = "dev"

[directory]
disabled = false
format = "[($path )]($style)[($read_only )]($read_only_style)"
style = "cyan"
read_only = "(read only)"
truncation_symbol = "…/"
truncation_length = 0
truncate_to_repo = true
fish_style_pwd_dir_length = 0
use_logical_path = true
read_only_style = "red"
home_symbol = "~"
    # [directory.substitutions]
    # "very/long/path" = "mypath"

[git_branch]
disabled = false
format = "on [$symbol$branch]($style)(:[$remote]($style)) "
symbol = " "
style = "purple"
always_show_remote = false
truncation_length = 9_223_372_036_854_775_807 # std::i64::MAX
truncation_symbol = "…"
only_attached = false

[git_commit]
disabled = false
format = "[\\($hash$tag\\)]($style) "
style = "green"
commit_hash_length = 7
only_detached = true
tag_symbol = "🏷 "
tag_disabled = true

[git_state]
disabled = false
format = "\\([$state( $progress_current/$progress_total)]($style)\\) "
am = "AM"
am_or_rebase = "AM/REBASE"
bisect = "BISECTING"
cherry_pick = "CHERRY-PICKING"
merge = "MERGING"
rebase = "REBASING"
revert = "REVERTING"
style = "yellow"

[git_status]
disabled = false
format = "([\\[$all_status$ahead_behind\\]]($style) )"
style = "red"
ahead = "↑${count}"
behind = "↓${count}"
diverged = "∥↑${ahead_count}↓${behind_count}"
conflicted = "=${count}"
deleted = "✗${count}"
modified = "!${count}"
renamed = "→${count}"
staged = "+${count}"
stashed = "\\$${count}"
untracked = "?${count}"

[hg_branch]
disabled = true
format = "on [$symbol$branch]($style) "
symbol = " "
style = "purple"
truncation_length = 9_223_372_036_854_775_807 # std::i64::MAX
truncation_symbol = "…"

[docker_context]
disabled = false
format = "via [$symbol$context]($style) "
symbol = "🐳 "
style = "blue"
only_with_files = true
detect_extensions = []
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []

[package]
disabled = false
format = "is [$symbol$version]($style) "
symbol = "📦 "
style = "208"
display_private = false

# ↓ Toolchain version modules ↓

[cmake]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "喝 "
style = "blue"
detect_extensions = []
detect_files = ["CMakeLists.txt", "CMakeCache.txt"]
detect_folders = []

[dart]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "🎯 "
style = "blue"
detect_extensions = ["dart"]
detect_files = ["pubspec.yaml", "pubspec.yml", "pubspec.lock"]
detect_folders = [".dart_tool"]

[dotnet]
disabled = false
format = "[$symbol($version )(🎯 $tfm )]($style)"
symbol = ".NET "
style = "blue"
heuristic = true
detect_extensions = ["sln", "csproj", "fsproj", "xproj"]
detect_files = ["global.json", "project.json", "Directory.Build.props", "Directory.Build.targets", "Packages.props"]
detect_folders = []

[elixir]
disabled = false
format = "via [$symbol($version \\(OTP $otp_version\\) )]($style)"
symbol = "💧 "
style = "purple"
detect_extensions = []
detect_files = ["mix.exs"]
detect_folders = []

[elm]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "🌳 "
style = "cyan"
detect_extensions = ["elm"]
detect_files = ["elm.json", "elm-package.json", ".elm-version"]
detect_folders = ["elm-stuff"]

[erlang]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = " "
style = "red"
detect_extensions = []
detect_files = ["rebar.config", "erlang.mk"]
detect_folders = []

[golang]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "🐹 "
style = "cyan"
detect_extensions = ["go"]
detect_files = ["go.mod", "go.sum", "glide.yaml", "Gopkg.yml", "Gopkg.lock", ".go-version"]
detect_folders = ["Godeps"]

[helm]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "⎈ "
style = "white"
detect_extensions = []
detect_files = ["helmfile.yaml", "Chart.yaml"]
detect_folders = []

[java]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "☕ "
style = "red dimmed"
detect_extensions = ["java", "class", "jar", "gradle", "clj", "cljc"]
detect_files = ["pom.xml", "build.gradle.kts", "build.sbt", ".java-version", "deps.edn", "project.clj", "build.boot"]
detect_folders = []

[julia]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "ஃ "
style = "purple"
detect_extensions = ["jl"]
detect_files = ["Project.toml", "Manifest.toml"]
detect_folders = []

[kotlin]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "🅺 "
style = "blue"
kotlin_binary = "kotlin"
detect_extensions = ["kt", "kts"]
detect_files = []
detect_folders = []

[lua]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "🌙 "
style = "blue"
lua_binary = "lua"
detect_extensions = ["lua"]
detect_files = [".lua-version"]
detect_folders = ["lua"]

[nim]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "👑 "
style = "yellow"
detect_extensions = ["nim", "nims", "nimble"]
detect_files = ["nim.cfg"]
detect_folders = []

[nodejs]
disabled = false
# format = "via [$symbol($version )]($style)"
format = "via [$symbol($version )](green)"
symbol = "Node.js "
style = "green"
not_capable_style = "red"
detect_extensions = ["js", "mjs", "cjs", "ts"]
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]

[ocaml]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "🐫 "
style = "yellow"
detect_extensions = ["opam", "ml", "mli", "re", "rei"]
detect_files = ["dune", "dune-project", "jbuild", "jbuild-ignore", ".merlin"]
detect_folders = ["_opam", "esy.lock"]

[perl]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "🐪 "
style = "149"
detect_extensions = ["pl", "pm", "pod"]
detect_files = ["Makefile.PL", "Build.PL", "cpanfile", "cpanfile.snapshot", "META.json", "META.yml", ".perl-version"]
detect_folders = []

[php]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "🐘 "
style = "147"
detect_extensions = ["php"]
detect_files = ["composer.json", ".php-version"]
detect_folders = []

[purescript]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "<=> "
style = "white"
detect_extensions = ["purs"]
detect_files = ["spago.dhall"]
detect_folders = []

[python]
disabled = false
format = "via [${symbol}${pyenv_prefix}(${version} )(\\($virtualenv\\) )]($style)"
symbol = "Python "
style = "yellow"
pyenv_version_name = false
pyenv_prefix = "pyenv "
python_binary = ["python", "python3", "python2"]
detect_extensions = ["py"]
detect_files = ["requirements.txt", ".python-version", "pyproject.toml", "Pipfile", "tox.ini", "setup.py", "__init__.py"]
detect_folders = []

[ruby]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "💎 "
style = "red"
detect_extensions = ["rb"]
detect_files = ["Gemfile", ".ruby-version"]
detect_folders = []

[rust]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "💎 "
style = "red"
detect_extensions = ["rb"]
detect_files = ["Gemfile", ".ruby-version"]
detect_folders = []

[swift]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "🐦 "
style = "202"
detect_extensions = ["swift"]
detect_files = ["Package.swift"]
detect_folders = []

[terraform]
disabled = false
format = "via [$symbol$workspace]($style) "
symbol = "💠 "
style = "105"
detect_extensions = ["tf", "hcl"]
detect_files = []
detect_folders = [".terraform"]

[vagrant]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "⍱ "
style = "cyan"
detect_extensions = []
detect_files = ["Vagrantfile"]
detect_folders = []

[zig]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "↯ "
style = "yellow"
detect_extensions = ["zig"]
detect_files = []
detect_folders = []

# ↑ Toolchain version modules ↑

[nix_shell]
disabled = false
format = "via [$symbol$state( \\($name\\))]($style) "
symbol = "❄️ "
style = "blue"
impure_msg = "impure"
pure_msg = "pure"

[conda]
disabled = false
format = "via [$symbol$environment]($style) "
symbol = "🅒 "
style = "green"
truncation_length = 1
ignore_base = true

[memory_usage]
disabled = true
format = "via $symbol[$ram( | $swap)]($style) "
symbol = "🐏 "
style = "white dimmed"
threshold = 75

[aws]
disabled = false
format = "on [$symbol$profile(\\($region\\))]($style) "
symbol = "☁️ "
style = "yellow"
    [aws.region_aliases]
    af-south-1 = "Cape Town"
    ap-east-1 = "Hong Kong"
    ap-northeast-1 = "Tokyo"
    ap-northeast-2 = "Seoul"
    ap-northeast-3 = "Osaka-Local"
    ap-south-1 = "Mumbai"
    ap-southeast-1 = "Singapore"
    ap-southeast-2 = "Sydney"
    ca-central-1 = "Central Canada"
    eu-central-1 = "Frankfurt"
    eu-north-1 = "Stockholm"
    eu-south-1 = "Milan"
    eu-west-1 = "Ireland"
    eu-west-2 = "London"
    eu-west-3 = "Paris"
    me-south-1 = "Bahrain"
    sa-east-1 = "São Paulo"
    us-east-1 = "Northern Virginia"
    us-east-2 = "Ohio"
    us-west-1 = "Northern California"
    us-west-2 = "Oregon"

[gcloud]
disabled = false
format = "on [$symbol$account(\\($region\\))]($style) "
symbol = "☁️ "
style = "blue"
    [gcloud.region_aliases]
    us-central1 = "uc1"
    asia-northeast1 = "an1"

[openstack]
disabled = false
format = "on [$symbol$cloud(\\($project\\))]($style) "
symbol = "☁️ "
style = "yellow"

[env_var]
disabled = false
format = "with [$env_value]($style) "
symbol = ""
style = "black dimmed"
# variable = None
# default = None

[crystal]
disabled = false
format = "via [$symbol($version )]($style)"
symbol = "🔮 "
style = "red"
detect_extensions = ["cr"]
detect_files = ["shard.yml"]
detect_folders = []

[cmd_duration]
disabled = false
format = "took [$duration]($style) "
style = "yellow"
min_time = 2_000
show_milliseconds = false
show_notifications = false
min_time_to_notify = 45_000

[line_break]
disabled = true

[jobs]
disabled = false
format = "[$symbol$number]($style) "
symbol = "✦"
style = "blue"
threshold = 0

[battery]
disabled = false
format = "[$symbol$percentage]($style) "
full_symbol = ""
charging_symbol = ""
discharging_symbol = ""
unknown_symbol = ""
empty_symbol = ""
    [[battery.display]]
    style = "red"
    threshold = 10

[time]
disabled = true
format = "at [$time]($style) "
style = "yellow"
use_12hr = false
time_format = "%T.%f" # https://docs.rs/chrono/0.4.7/chrono/format/strftime/index.html
utc_time_offset = "local"
time_range = "-"

[status]
disabled = true
format = "[$symbol$status]($style) "
symbol = "✖"
style = "red"
not_executable_symbol = "🚫"
not_found_symbol = "🔍"
sigint_symbol = "🧱"
signal_symbol = "⚡"
map_symbol = false
recognize_signal_code = true

[character]
disabled = false
format = "$symbol "
success_symbol = "[❯](green)"
error_symbol = "[❯](red)"
vicmd_symbol = "[❮](green)"
